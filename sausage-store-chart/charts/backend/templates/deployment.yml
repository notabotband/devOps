---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ .Chart.Name }}-{{ .Release.Name }}"
  namespace: "{{ .Release.Namespace }}"
  labels:
    app.kubernetes.io/name: sausage-{{ .Chart.Name }}
    app.kubernetes.io/instance: "{{ .Release.Name }}"
    app.kubernetes.io/version: "{{ .Chart.AppVersion }}"
    app.kubernetes.io/managed-by: "{{ .Release.Service }}"
    helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    app.kubernetes.io/component: "{{ .Chart.Name }}"
    app.kubernetes.io/part-of: sausage-store
    env: "{{ .Values.environment }}"
    app: "{{ .Chart.Name }}"
spec:
  replicas:  {{ .Values.replicas }}
  revisionHistoryLimit:  {{ .Values.revisionHistoryLimit }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: {{ .Values.rollingUpdate.maxUnavailable }}
      maxSurge: {{ .Values.rollingUpdate.maxSurge }}
  selector:
    matchLabels:
      app: "{{ .Chart.Name }}"
  template:
    metadata:
      annotations:
        prometheus.io/path: /actuator/prometheus
        prometheus.io/port: "8080"
        prometheus.io/scrape: "true"
      labels:
        app: "{{ .Chart.Name }}"
    spec:
      containers:
        - name: "{{ .Chart.Name }}"
          image: "{{ .Values.image }}:{{ .Values.tag }}"
          imagePullPolicy: "{{ .Values.imagePullPolicy }}"
          resources:
            requests:
              memory: {{ .Values.resources.requests.memory }}
              cpu: {{ .Values.resources.requests.cpu }}
            limits:
              memory: {{ .Values.resources.limits.memory }}
              cpu: {{ .Values.resources.limits.cpu }}
          ports:
            - name: backend
              containerPort: {{ .Values.containerPort }}
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: {{ .Values.containerPort }}
            initialDelaySeconds: 20
            periodSeconds: 30
            timeoutSeconds: 10
            failureThreshold: 6
      imagePullSecrets:
        - name: docker-config-secret

